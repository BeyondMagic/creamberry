#!/usr/bin/env sh

# 1. Set main variables.
{

  # A. Main path of icons.
  icons="$HOME/.local/share/icons"

  if mountpoint -q /mnt/pendrive; then

    pendrive_status="IMG:$icons/camera-off.svg\tUmount Pendrive\tdoas -- umount /mnt/pendrive"

  else

    pendrive_status="IMG:$icons/camera-plus.svg\tMount Pendrive (/dev/sdc1)\tdoas -- mount -o umask=0,uid=nobody,gid=nobody /dev/sdc1 /mnt/pendrive"

  fi

}

# 2. Retrieve command to execute.
command="$(echo "
IMG:$icons/flarity.svg\tTerminalーエミュレータ\tflarity

IMG:$icons/internet.svg\tWebーブラウザ
\tIMG:$icons/firefox.svg\tFirefox Nightly\tzsh -c 'haha'
\tIMG:$icons/brave.svg\tBrave Nightly\tzsh -c 'lol'

IMG:$icons/notebook.svg\tText Editor\tflarity -e nvim
IMG:$icons/applications.svg\tアプリケーション
\tIMG:$icons/gimp.svg\tInkscape\tinkscape
\tIMG:$icons/gimp.png\tTelegram\ttelegram-desktop
\tIMG:$icons/gimp.png\tShazam\tsongrec
\tIMG:$icons/gimp.png\tZathura\tzathura
\tIMG:$icons/gimp.png\tTenacity\ttenacity
\tIMG:$icons/gimp.png\tGimp\tgimp-2.10
\t
\tIMG:$icons/gimp.png\tMonero Wallet\tmonero-wallet-gui
\tIMG:$icons/gimp.png\tTerra Station\tstation-electron
\t
\tIMG:$icons/gimp.png\tDeezer\tdeemix-gui
\tIMG:$icons/gimp.png\tMPV\tmpv --player-operation-mode=pseudo-gui
\tIMG:$icons/gimp.png\tVLC\tvlc
\tIMG:$icons/gimp.png\tqBitTorrent\tqbittorrent
\t
\tIMG:$icons/gimp.png\txSnow\txsnow
\t
\tIMG:$icons/gimp.png\tADB Screen\tscrcpy -K
IMG:$icons/monitor.svg\t画面
\tIMG:$icons/photo.svg\tSet Size Screenshot\tscreen
\tIMG:$icons/picture.svg\tFull Screenshot\tfullscreen
\t
\tIMG:$icons/photo.svg\tSet Size in GIF\trecord_gif size
\tIMG:$icons/picture.svg\tFull Display GiIF\trecord_gif full
\tIMG:$icons/photo.svg\tSet Size MKV\tscreen
\tIMG:$icons/picture.svg\tFull Display MKV\tfullphoto

IMG:$icons/full_bookmark.svg\t場所
\tIMG:$icons/photo.svg\tDownloads\tflarity -e zsh -c '. ~/.config/zsh/aliasesrc; n $HOME/Downloads/; exec zsh'
\tIMG:$icons/picture.svg\tLibrary\tflarity -e zsh -c '. ~/.config/zsh/aliasesrc; n $HOME/Library/; exec zsh'
\t
\tIMG:$icons/picture.svg\tPendrive
\t\tIMG:$icons/Pendrive\tSee files\tflarity -e zsh -c '. ~/.config/zsh/aliasesrc; n /mnt/pendrive/; exec zsh'
\t\t$pendrive_status
\tIMG:$icons/picture.svg\tEvolução\tflarity -e zsh -c '. ~/.config/zsh/aliasesrc; n $HOME/Evolução/; exec zsh'
\tIMG:$icons/photo.svg\tJapanese\tflarity -e zsh -c '. ~/.config/zsh/aliasesrc; n $HOME/Japanese/; exec zsh'
\tIMG:$icons/picture.svg\tStory\tflarity -e zsh -c '. ~/.config/zsh/aliasesrc; n $HOME/Story/; exec zsh'
\tIMG:$icons/picture.svg\tImages\tflarity -e zsh -c '. ~/.config/zsh/aliasesrc; n $HOME/Images/; exec zsh'
\tIMG:$icons/picture.svg\tGit\tflarity -e zsh -c '. ~/.config/zsh/aliasesrc; n $HOME/Git/; exec zsh'
IMG:$icons/bookmark.svg\tブックマーク
\tIMG:$icons/photo.svg\tMemes
\tIMG:$icons/picture.svg\t...
\t
\tIMG:$icons/photo.svg\t...
\tIMG:$icons/picture.svg\t...
\tIMG:$icons/photo.svg\t...
\tIMG:$icons/picture.svg\t...
IMG:$icons/cog.svg\t環境設定
\tIMG:$icons/picture.svg\tSuckless
\t\tIMG:$icons/picture.svg\tBoomer\tflarity -e nvim $HOME/.config/boomer/config
\t\tIMG:$icons/picture.svg\tdwm\tflarity -e nvim $HOME/Git/Forking/dwm/config.h
\t\tIMG:$icons/picture.svg\tFlarity\tflarity -e nvim $HOME/Git/Projects/flarity/config.h
\t
\tIMG:$icons/picture.svg\tWeb Home-page\tflarity -e nvim $HOME/Git/Projects/startpage/data/links.json
\tIMG:$icons/picture.svg\tNVim\tflarity -e nvim $HOME/.config/nvim/init.lua
\tIMG:$icons/picture.svg\tFcitx5\tflarity -e nvim $HOME/.config/fcitx5/config
\tIMG:$icons/picture.svg\tPicom\tflarity -e nvim $HOME/.config/picom/picom.conf
\tIMG:$icons/picture.svg\tGLava\tflarity -e nvim $HOME/.config/glava/rc.glsl
\tIMG:$icons/picture.svg\tVisualBoyAdvance-M\tflarity -e nvim $HOME/.config/visualboyadvance-m/vbam.ini
\tIMG:$icons/picture.svg\tXResources\tflarity -e nvim $HOME/.config/xorg/XResources
\tIMG:$icons/picture.svg\tDunst\tflarity -e nvim $HOME/.config/dunst/dunstrc.template
\tIMG:$icons/picture.svg\tZathura\tflarity -e nvim $HOME/.config/zathura/zathurarc.template
\tIMG:$icons/picture.svg\tNSXiv\tflarity -e nvim $HOME/.config/nsxiv/exec/key-handler
\tIMG:$icons/picture.svg\tncmpcpp\tflarity -e nvim $HOME/.config/ncmpcpp/config
\tIMG:$icons/picture.svg\tMPDScribble\tflarity -e nvim $HOME/.config/mpdscribble/mpdscribble.conf
\tIMG:$icons/picture.svg\tn³\tflarity -e nvim $HOME/.config/nnn/plugins/preview-tabbed
\tIMG:$icons/picture.svg\tYMuse\tflarity -e nvim $HOME/.config/ymuse/config.json
\tIMG:$icons/picture.svg\tRofi\tflarity -e nvim $HOME/.config/rofi/themes/colors.rasi
\tIMG:$icons/picture.svg\tZsh\tflarity -e nvim $HOME/.config/zsh/.zshrc
\tIMG:$icons/picture.svg\txSettings\tflarity -e nvim $HOME/.config/xsettingsd/xsettingsrc.template
\tIMG:$icons/picture.svg\tEWW\tflarity -e nvim $HOME/.config/eww/eww.yuck
IMG:$icons/key.svg\tキーバインド\tflarity -e nvim $HOME/.config/xbindkeys/xbindkeysrc

IMG:$icons/lock.svg\tロック画面\tlock
IMG:$icons/desktop-computer.svg\tシステム
\tIMG:$icons/bulb-off.svg\tステータス
\t\t
\t\t    $(id -G -n | sed "s/ /@/") | $(date +'%H:%M, %a%b %d')   
\t\t
\t\tIMG:$icons/artix.svg\t   OS       $(cat /etc/os-release | grep -m 1 -oP '((?<=NAME=").*(?= Linux"))') - GNU/Linux - x86_64
\t\tIMG:$icons/artboard.svg\t   KERNEL   Linux $(uname -r)
\t\tIMG:$icons/clock.svg\t   UPTIME   $(uptime -p | sed 's/^up //')
\t\tIMG:$icons/brand-tabler.svg\t   SHELL    $(echo "$SHELL" | sed 's_/usr/bin/__')
\t\tIMG:$icons/box.svg\t   PACKAGES $(pacman -Q | wc -l) packages
\t\tIMG:$icons/tool.svg\t   INIT     $(ls -l /sbin/init | grep -oP '((?<=-> ).*(?=-init))')
\t\tIMG:$icons/live-photo.svg\t   MEMORY   $(free -m | awk '{print $3}' | head -n2 | tail -n1)MiB
\tIMG:$icons/power.svg\tスイッチを切る\tdoas halt
\tIMG:$icons/refresh.svg\tリブート\tdoas -- shutdown -r now
\tIMG:$icons/bed.svg\t睡眠\tdoas -- zzz
\tIMG:$icons/logout.svg\tログアウト\texec unlovemii
\tIMG:$icons/brand-windows.svg\tリブートーWindow Manager\tdwm-msg run_command quit 1

IMG:$icons/paint.svg\t壁紙
\tIMG:$icons/wallpaper.svg\t新しいーランダム\tzsh -c '. ~/.config/zsh/aliasesrc; random_wallpaper'
\tIMG:$icons/wall.svg\tすべて\tzsh -c '. ~/.config/zsh/aliasesrc; set_wallpaper'
" \
| sed -re '1d;$d' | xmenu)"

# II. Execute command in fly.
eval "$command"
