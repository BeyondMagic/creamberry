#!/usr/bin/env sh
#
# Description
#   Get the title of the active windows
#   You can set an icon for specific programs that you
#   Often use :)
#
# Note
#   This formats for certain windows invidivually.
#   For example, for simple terminal (st), it
#   will display a certain icon.
#   You can change that by just creating a new 
#   condition in 'format_active_window'
#
# Dependencies
#   xorg
#   dwm
#     dwm-msg
#
# BeyondMagic © 2021

  affix=""

. $HOME/desktop/colours "b"


origin=$(cd -- "$(dirname "$0")" >/dev/null 2>&1 && pwd -P)


# Format a Process name based on ID
#   Note: it's ID, not PID
format_active_window() {

  icon=""
  process_id="$1"

  total=$(xprop -id "$process_id" | grep "_NET_WM_NAME" | sed -r -e 's/(_NET_WM_NAME\(UTF8_STRING\) = ")|"$//g')
  name=$(cat /proc/$(xdotool getwindowpid "$process_id")/comm)
  

  # st
       [ "$name" = "st" ] && {

    icon=""
    title_program=$(echo "$total" | sed -r 's/ .*//')
    total=$(echo "$total" | sed -r 's/\w* //')
    
    [ "$title_program" = "v" ] && icon=""
    [ "$title_program" = "mpd" ] && { icon=""; total=$(echo "$total" | sed -r "s/» *//g"); }
    [ "$title_program" = "n" ] && icon=""

  # Firefox-Developer-Edition
  }; [ "$name" = "firefox" ] && {

    icon=""
    total=$(echo "$total" | sed -r 's/(\[Sidebery\] )|( — Firefox.*)//g')

  # gcolor2
  }; [ "$name" = "gcolor2" ] && {
    
    icon=""

  # sxiv
  }; [ "$total" = "sxiv" ] && {
    
    icon=""

  # gimp
  }; [ "$name" = "gimp" ] && {
    
    icon=""

  # mpv
  }; [ "$name" = "mpv" ] && {
    
    icon=""

  # qbittorrent
  }; [ "$name" = "qbittorrent" ] && {
    
    icon=""

  }; [ "$name" = "visualboyadvanc" ] && {
    
    icon=""

  }; [ "$name" = "zathura" ] && {
    
    icon=""

  }; [ "$name" = "telegram-deskto" ] && {
    
    icon=""

  }
  

  
  #  julia

    # Reduce length if it's bigger than 40 characters
  [ "${#total}" -gt "40" ] && total="$(echo "$total" | cut -c -40)..."
    # If there's no icon, then just prints out the name
  [ ! -n "$icon" ] && icon="$name" || icon="%{T3}$icon"

  echo 'T' "%{F$title_icon_fg}  $icon %{T2 F$title_name_fg}$total  %{T1 F-}"

}

get_active_window() {

  format_active_window "$(xdotool getwindowfocus)"

  dwm-msg --ignore-reply subscribe focused_title_change_event client_focus_change_event |
    grep --line-buffered -oP '((?<=new_win_id": ).*)|((?<=client_window_id": )\d*)' |
    while IFS=$'\n' read -r winid; do
      [ $winid = "null" ] && {

        echo 'T'

      } || {

        format_active_window "$winid"

      }
    done

  echo "DWM died, resetting connection in 5 seconds"; sleep 5

  exec "$origin/_title"

}

get_active_window
