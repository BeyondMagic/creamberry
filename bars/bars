#!/usr/bin/env sh
#
# Description
#   Two lemonbars with fifo, events as well
#   very lightweight, and low CPU usage
#
# Note
#   Low ram usage (30Mi)
#   This uses external fonts
#   The size of the bar is compatible with my monitor, change
#     for your needs
#   It's recommended to change the location of fifos as well
#   And icons for scripts
#   It's recommended to use dash to run this (link sh to dash),
#     since it will be way faster
#
# Dependencies
#   dash
#   xorg
#   xdotools
#   lemonbar (or forks that have fontconfig)
#   tuxi
#   sensors
#   lm_sensors ; sensors
#   notify-send.sh
#   mpd
#     mpc
#   dwm
#     dwm-msg
#   imagemagick
#
# BeyondMagic Â© 2021






# Config of Bars
#   Geometry
height_tbar="19"; width_tbar="1400"; offset_ty="+20"; offset_tx="+10"
height_bbar="19"; width_bbar="1400"; offset_by="+20"; offset_bx="+10"

# Constants of Fonts
#   Each font is beautifully chosen :)
  normal_font="Noto Sans CJK JP Medium:antialias=true:size=10"
    bold_font="Noto Sans CJK JP Black:style=Black,Regular:antialias=true:size=10"
   emoji_font="NotoEmoji Nerd Font:antialias=true"
material_font="Material\-Design\-Iconic\-Font:style=Design-Iconic-Font:antialias=true:size=12"

# Constants of fifos to transfer information of functions
location_of_bottom_fifo="/tmp/bottom.fifo"
   location_of_top_fifo="/tmp/top.fifo"











# Start basic config
origin="$(cd -- "$(dirname "$0")" >/dev/null 2>&1 && pwd -P)"

# Clean later processes
killall lemonbar
rm -rf "$location_of_bottom_fifo" "$location_of_top_fifo" 


# Start fifos
mkfifo "$location_of_bottom_fifo" "$location_of_top_fifo"
exec 3<> "$location_of_bottom_fifo"; exec 3<> "$location_of_top_fifo"

# Sleep for a few seconds to wait for mpd and dwm
#sleep 3

. $origin/config












read_top_bar() {
  while read -r line; do
    case $line in

      # Clock ( date )
      C*)
        clock="${line#?}";;

      # Sensors of CPU
      S*)
        sensors="${line#?}";;

      # Power icon
      P*)
        power="${line#?}";;

      # Music
      M*)
        music="${line#?}";;

      # Sound
      T*)
        sound="${line#?}";;
	
      # Tasks
      #T*)
       # task="${line#?}";;

    esac

    printf "%s%s%s\n" "$clock  %{F-}%{B-}$sensors%{c}$music%{r}$sound  $power"

  done < "$location_of_top_fifo" 
}

# Function of the bottom bar for Lemonbar
#   Modules are:
read_bottom_bar() {
  while read -r line; do
    case $line in
    
      # Title of Current Window
      T*)
        title="${line#?}";;

      # Tags
      W*)
        tags="${line#?}";;

      # Layouts
      L*)
        layouts="${line#?}";;

      M*)
        memory="${line#?}";;

      # Record/Utilities
      R*)
        record="${line#?}";;

    esac

    printf "%s%s%s\n" "$layouts%{T3}$tags%{T1}%{c}$title%{r}$record$memory$nickname"

   done < "$location_of_bottom_fifo"  
}









read_top_bar | lemonbar -H -p -g "${width_tbar}x${height_tbar}${offset_ty}${offset_tx}" \
  -B "$bg_bar" \
  -F "$fg_bar" \
  -o 0 -f "$normal_font" \
  -o 0 -f "$bold_font" \
  -o 1 -f "$emoji_font:size=10.3" \
  -o 0 -f "$material_font" \
	| while read -r line; do
    [ $(echo "$line" | awk '{print $1}') = 'execute' ] && {
      line="$(echo "$line" | sed -r 's/^execute //')"
      eval "$line"
    }
  done &

read_bottom_bar | lemonbar -H -b -p -g "${width_bbar}x${height_bbar}${offset_by}${offset_bx}" \
  -B "$bg_bar" \
  -F "$fg_bar" \
  -o 0 -f "$normal_font" \
  -o 0 -f "$bold_font" \
  -o 1 -f "$emoji_font:size=10.3" \
  -o -3 -f "$material_font" \
  -n "bottom_bar" \
  | while read -r line; do
    [ $(echo "$line" | awk '{print $1}') = 'execute' ] && {
      line="$(echo "$line" | sed -r 's/^execute //')"
      eval "$line"
    }
  done &





# Load information on bars
{

  . "$origin"/bottom_bar/_title;
  . "$origin"/bottom_bar/_layout;
  . "$origin"/bottom_bar/_memory;
  _get_layout & _get_tags &
  _get_ram &
  _get_active_window &

} > "$location_of_bottom_fifo"

{

  "$origin/"top_bar/_song run &
  "$origin/"top_bar/_sound run &
  . "$origin/"top_bar/_clock
  . "$origin/"top_bar/_power
  . "$origin/"top_bar/_sensors
  _clock &
  _sensors &
  _get_power

} > "$location_of_top_fifo"








mpc toggle && mpc toggle
dwm-msg run_command view 128 && dwm-msg run_command view 1

exit 0
